<launch>
  <include file="$(find pr2_moveit_config)/launch/planning_context.launch" />

  <!-- <node pkg="humanoid_catching" type="arm_controller_tester" name="arm_controller_tester_left">
    <param name="end_effector" value="l_wrist_roll_link" />
    <param name="arm" value="left_arm" />
    <param name="command_topic" value=" /catch_human_controller_left/record_movement_goal" />
  </node> -->

  <node pkg="humanoid_catching" type="arm_controller_tester" name="arm_controller_tester_right">
    <param name="end_effector" value="r_wrist_roll_link" />
    <param name="arm" value="right_arm" />
    <param name="command_topic" value=" /catch_human_controller_right/record_movement_goal" />
  </node>

  <include file="$(find pr2_moveit_config)/launch/planning_context.launch">
    <arg name="load_robot_description" value="true"/>
  </include>

  <node pkg="tf" type="static_transform_publisher" name="virtual_joint_broadcaster_0" args="0 0 0 0 0 0 odom_combined base_footprint 100" />

  <node name="joint_state_publisher" pkg="joint_state_publisher" type="joint_state_publisher">
    <param name="/use_gui" value="false"/>
  </node>

  <node name="robot_state_publisher" pkg="robot_state_publisher" type="robot_state_publisher" respawn="true" output="screen" />

  <include file="$(find pr2_moveit_config)/launch/move_group.launch">
    <arg name="allow_trajectory_execution" value="true"/>
  </include>

  <node pkg="humanoid_catching" type="metrics_recorder" name="metrics_recorder" output="screen"/>

</launch>
